<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inspur.dsp.direct.dao.business.VocabularyRelDao">
  <resultMap id="BaseResultMap" type="com.inspur.dsp.direct.dbentity.business.VocabularyRel">
    <!--@mbg.generated-->
    <!--@Table vocabulary_rel-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="subject_vocabulary_id" jdbcType="VARCHAR" property="subjectVocabularyId" />
    <result column="subject_vocabulary" jdbcType="VARCHAR" property="subjectVocabulary" />
    <result column="object_vocabulary_id" jdbcType="VARCHAR" property="objectVocabularyId" />
    <result column="object_vocabulary" jdbcType="VARCHAR" property="objectVocabulary" />
    <result column="relationship" jdbcType="VARCHAR" property="relationship" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="modify_user_id" jdbcType="VARCHAR" property="modifyUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, subject_vocabulary_id, subject_vocabulary, object_vocabulary_id, object_vocabulary, 
    relationship, create_date, create_user_id, modify_date, modify_user_id
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update vocabulary_rel
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="subject_vocabulary_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.subjectVocabularyId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="subject_vocabulary = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.subjectVocabulary,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="object_vocabulary_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.objectVocabularyId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="object_vocabulary = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.objectVocabulary,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="relationship = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.relationship,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.createDate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="create_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.createUserId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="modify_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.modifyDate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="modify_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.modifyUserId,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=VARCHAR}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update vocabulary_rel
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="subject_vocabulary_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.subjectVocabularyId != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.subjectVocabularyId,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="subject_vocabulary = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.subjectVocabulary != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.subjectVocabulary,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="object_vocabulary_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.objectVocabularyId != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.objectVocabularyId,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="object_vocabulary = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.objectVocabulary != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.objectVocabulary,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="relationship = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.relationship != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.relationship,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createDate != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.createDate,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createUserId != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.createUserId,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="modify_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.modifyDate != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.modifyDate,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="modify_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.modifyUserId != null">
            when id = #{item.id,jdbcType=VARCHAR} then #{item.modifyUserId,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=VARCHAR}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into vocabulary_rel
    (id, subject_vocabulary_id, subject_vocabulary, object_vocabulary_id, object_vocabulary, 
      relationship, create_date, create_user_id, modify_date, modify_user_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.subjectVocabularyId,jdbcType=VARCHAR}, #{item.subjectVocabulary,jdbcType=VARCHAR}, 
        #{item.objectVocabularyId,jdbcType=VARCHAR}, #{item.objectVocabulary,jdbcType=VARCHAR}, 
        #{item.relationship,jdbcType=VARCHAR}, #{item.createDate,jdbcType=TIMESTAMP}, #{item.createUserId,jdbcType=VARCHAR}, 
        #{item.modifyDate,jdbcType=TIMESTAMP}, #{item.modifyUserId,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <delete id="deleteByPrimaryKeyIn">
    <!--@mbg.generated-->
    delete from vocabulary_rel where id in 
    <foreach close=")" collection="list" item="id" open="(" separator=", ">
      #{id,jdbcType=VARCHAR}
    </foreach>
  </delete>
</mapper>